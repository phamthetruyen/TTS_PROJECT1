// Generated by Dagger (https://dagger.dev).
package vn.mobifone.tts_project1.ui.tasks;

import androidx.lifecycle.SavedStateHandle;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import vn.mobifone.tts_project1.data.PreferencesManager;
import vn.mobifone.tts_project1.data.TaskDao;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TasksViewModel_Factory implements Factory<TasksViewModel> {
  private final Provider<TaskDao> taskDaoProvider;

  private final Provider<PreferencesManager> preferencesManagerProvider;

  private final Provider<SavedStateHandle> stateProvider;

  public TasksViewModel_Factory(Provider<TaskDao> taskDaoProvider,
      Provider<PreferencesManager> preferencesManagerProvider,
      Provider<SavedStateHandle> stateProvider) {
    this.taskDaoProvider = taskDaoProvider;
    this.preferencesManagerProvider = preferencesManagerProvider;
    this.stateProvider = stateProvider;
  }

  @Override
  public TasksViewModel get() {
    return newInstance(taskDaoProvider.get(), preferencesManagerProvider.get(), stateProvider.get());
  }

  public static TasksViewModel_Factory create(Provider<TaskDao> taskDaoProvider,
      Provider<PreferencesManager> preferencesManagerProvider,
      Provider<SavedStateHandle> stateProvider) {
    return new TasksViewModel_Factory(taskDaoProvider, preferencesManagerProvider, stateProvider);
  }

  public static TasksViewModel newInstance(TaskDao taskDao, PreferencesManager preferencesManager,
      SavedStateHandle state) {
    return new TasksViewModel(taskDao, preferencesManager, state);
  }
}
