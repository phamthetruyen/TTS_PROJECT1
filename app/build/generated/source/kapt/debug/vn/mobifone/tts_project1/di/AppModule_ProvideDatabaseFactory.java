// Generated by Dagger (https://dagger.dev).
package vn.mobifone.tts_project1.di;

import android.app.Application;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import vn.mobifone.tts_project1.data.TaskDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDatabaseFactory implements Factory<TaskDatabase> {
  private final Provider<Application> appProvider;

  private final Provider<TaskDatabase.Callback> callbackProvider;

  public AppModule_ProvideDatabaseFactory(Provider<Application> appProvider,
      Provider<TaskDatabase.Callback> callbackProvider) {
    this.appProvider = appProvider;
    this.callbackProvider = callbackProvider;
  }

  @Override
  public TaskDatabase get() {
    return provideDatabase(appProvider.get(), callbackProvider.get());
  }

  public static AppModule_ProvideDatabaseFactory create(Provider<Application> appProvider,
      Provider<TaskDatabase.Callback> callbackProvider) {
    return new AppModule_ProvideDatabaseFactory(appProvider, callbackProvider);
  }

  public static TaskDatabase provideDatabase(Application app, TaskDatabase.Callback callback) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDatabase(app, callback));
  }
}
